server:
  port: 9900
spring:
  profiles:
    active: "dev"
  application:
    name: bike-validator-service

  datasource:
    initialization-mode: always
    password: Pass2020!
    platform: postgres
    username: postgres

  jpa:
    generate-dll: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
  kafka:
    consumer:
      auto-offset-reset: earliest
      group-id: bike-validator
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    producer:
      group-id: bike-validator
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

topic:
  validate-bike:
    producer: validate-bike
  unlock-bike:
    producer: unlock-bike
  notification:
    producer: notification

auto:
  create:
    topics:
      enable: true

eureka:
  instance:
    preferIpAddress: true
    hostname: bike-validator-service
  client:
    registerWithEureka: true
    fetchRegistry: true

---
spring:
  profiles: dev

  datasource:
    url: jdbc:postgresql://localhost:5432/bike

  kafka:
    bootstrap-servers: localhost:9094

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

---
spring:
  profiles: prod

  datasource:
    url: jdbc:postgresql://postgres-dock:5432/bike

  kafka:
    bootstrap-servers: kafka-0.kafka.kafka:9092

eureka:
  client:
    service-url:
      defaultZone: http://eureka:8761/eureka


