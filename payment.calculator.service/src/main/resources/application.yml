server:
  port: 9000
spring:
  profiles:
    active: "dev"
  application:
    name: payment-calculator-service
management:
  security:
    enabled: false
security:
  basic:
    enable: false
  kafka:
    consumer:
      auto-offset-reset: earliest
      group-id: payment-calculator
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    producer:
      group-id: payment-calculator
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

topic:
  rental:
    consumer: rental-payment
  payment-request:
    producer: payment-request

auto:
  create:
    topics:
      enable: true

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
  instance:
    preferIpAddress: true
    hostname: payment-calculator-service

---
spring:
  profiles: dev
  kafka:
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: localhost:9094
    producer:
      bootstrap-servers: localhost:9094

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

---
spring:
  profiles: dev

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
        
---
spring:
  profiles: prod
  kafka:
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: kafka-0.broker.kafka:9092
    producer:
      bootstrap-servers: kafka-0.broker.kafka:9092

eureka:
  client:
    service-url:
      defaultZone: http://eureka:8761/eureka
