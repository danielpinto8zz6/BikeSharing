server:
  port: 8600
spring:
  profiles:
    active: "dev"
  application:
    name: travel-history-service

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
  instance:
    # Leave prefer ip address to allow the gateway inside the kubernetes cluster to find this service by it's pod ip
    preferIpAddress: true
    # The hostname of the service, to register the pod and turn it easier for the gateway to find it
    # For deploying eureka clients in Kubernetes you need to set the hostname as the same name of the service
    hostname: travel-history-service

---
spring:
  profiles: dev
  
  data:
    mongodb:
      uri: mongodb://mongo:Pass2020!@localhost:27888/travel-history?authSource=admin&retryWrites=true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

---    
spring:
  profiles: prod
    
  data:
    mongodb:
      uri: mongodb://mongo:Pass2020!@mongodb:27888/travel-history?authSource=admin&retryWrites=true
    
eureka:
  client:
    service-url:
      defaultZone: http://eureka:8761/eureka

