server:
    port: 8900
spring:
    application:
        name: dock-service
    datasource:
        initialization-mode: always
        password: Pass2020!
        platform: postgres
        url: jdbc:postgresql://localhost:5432/dock
        username: postgres
    jpa:
        hibernate:
            ddl-auto: none
        properties:
            hibernate:
                jdbc:
                    lob:
                        non_contextual_creation: true
    kafka:
        consumer:
            auto-offset-reset: earliest
            bootstrap-servers: 127.0.0.1:9092
            group-id: dock-management
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        producer:
            bootstrap-servers: 127.0.0.1:9092
            group-id: dock-management
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.apache.kafka.common.serialization.StringSerializer
dock-event:
    producer: dock-event
    consumer: dock-event
rent:
    consumer: rent

auto:
    create:
        topics:
            enable: true
eureka:
    instance:
        # Leave prefer ip address to allow the gateway inside the kubernetes cluster to find this service by it's pod ip
        preferIpAddress: true
        # The hostname of the service, to register the pod and turn it easier for the gateway to find it
        hostname: dock-service
    client:
        registerWithEureka: true
        fetchRegistry: true
        service-url:
            default-zone: http://localhost:8761/eureka
