server:
  port: 9500
spring:
  profiles:
    active: "dev"
  application:
    name: rental-process-service

  jpa:
    generate-dll: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true

  datasource:
    initialization-mode: always
    password: Pass2020!
    platform: postgres
    username: postgres

  kafka:
    consumer:
      auto-offset-reset: earliest
      group-id: dock-event
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    producer:
      group-id: rental-process
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

topic:
  bike-inserted:
    consumer: bike-inserted
  rental:
    producer: rental

auto:
  create:
    topics:
      enable: true

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
  instance:
    preferIpAddress: true
    hostname: rental-process-service

---
spring:
  profiles: dev

  datasource:
    url: jdbc:postgresql://localhost:5432/rental

  kafka:
    consumer:
      bootstrap-servers: localhost:9094
    producer:
      bootstrap-servers: localhost:9094

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

---
spring:
  profiles: prod

  datasource:
    url: jdbc:postgresql://postgres-rental:5432/rental

  kafka:
    consumer:
      bootstrap-servers: kafka-0.kafka.kafka:9092
    producer:
      bootstrap-servers: kafka-0.kafka.kafka:9092

eureka:
  client:
    service-url:
      defaultZone: http://eureka:8761/eureka
