package estg.mtsd.bikeshare.auth.service.service;

import java.util.List;

import com.netflix.appinfo.InstanceInfo;
import com.netflix.discovery.EurekaClient;
import com.netflix.discovery.shared.Application;
import com.netflix.ribbon.proxy.annotation.Http.HttpMethod;

import org.hibernate.validator.internal.util.stereotypes.Lazy;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import estg.mtsd.bikeshare.auth.service.security.UserVo;

@Configuration
@Component
public class AccountService {

    @Autowired
    private RestTemplate restTemplate;

    @Autowired
    @Lazy
    private EurekaClient eurekaClient;

    private static final String USER_BY_USERNAME_URI = "/user/";
    private static final String PROTOCOL_HTTP = "http://";

    public UserVo getUserByUsername(String username) {

        String replaceURI = USER_BY_USERNAME_URI + username;

        String url = getServiceURL("account-service", replaceURI);

        return doRemoteRESTCall(url);
    }

    private UserVo doRemoteRESTCall(String url) {

        try {

			return restTemplate.getForObject(url, UserVo.class);

        } catch (Exception exception) {
        }
        return null;
    }

    /**
     * This method enquire the service registry the fetch the url
     * 
     * @param serviceName
     * @return String
     */
    private String getServiceURL(String serviceName, String uri) {

        Application application = eurekaClient.getApplication("account-service");

        if (application != null && !application.getInstances().isEmpty()) {

            InstanceInfo instanceInfo = application.getInstances().get(0);
            String hostname = instanceInfo.getHostName();
            int port = instanceInfo.getPort();

            return PROTOCOL_HTTP.concat(hostname).concat(":") + port + uri;
        }

        return null;
    }

}